.text
OUT_STRING:
	lw $a0, 0($s2)
	li $v0, 4
	syscall
	jr $ra
OUT_INT:
	lw $a0, 0($s2)
	li $v0, 1
	syscall
	jr $ra
TYPE_NAME:
	lw $t0, 0($s2)
	la $t1, object_str
	beq $t0, $t1, is_Object
	la $t1, bool_str
	beq $t0, $t1, is_Bool
	jr $ra
is_Object:
	la $t0, object_str
	sw $t0, 0($s2)
	jr $ra
is_Bool:
	la $t0, bool_str
	sw $t0, 0($s2)
	jr $ra
SUBSTR:
	lw $t0, 0($s2)
	lw $t1, 4($s2)
	bge $t0, $t1, SWAP
	j NO_SWAP
SWAP:
	lw $t0, 4($s2)
	lw $t1, 0($s2)
	j NO_SWAP
NO_SWAP:
	move $t3, $t0
	add $t4, $a0, $t0
	move $t5, $a1
	COOPY_LOOP:
		lb $t6, 0($t4)
		sb $t6, 0($t5)
		addi $t4, $t4, 1
		addi $t5, $t5, 1
		addi $t3, $t3, 1
		bne $t3, $t1, COOPY_LOOP
	li $t6, 0
	sb $t6, 0($t5)
	sw $a1, 0($s2)
	jr $ra
ISVOID:
	lw $t0, 0($s2)
	la $t1, void_str
	COMPARE_VOID:
		lb $t2, 0($t0)
		lb $t3, 0($t1)
		beq $t2, $t3, CONTINUE_VOID
		j NOT_EQUAL_VOID
	CONTINUE_VOID:
		addi $t0, $t0, 1
		addi $t1, $t1, 1
		beq $t2, 0, IS_EQUAL_VOID
		j COMPARE_VOID
	IS_EQUAL_VOID:
	la $t0, true_str
	j END_COMPARE_VOID
	NOT_EQUAL_VOID:
	la $t0, false_str
	END_COMPARE_VOID:
	sw $t0, 0($s2)
	jr $ra
ABORT:
	li $v0, 10
	syscall
.text
Main.n:
	li $t0, 7
	sw $t0, 0($s0)
	jr $ra
.text
Main.t:
	li $t0, 3
	sw $t0, 4($s0)
	jr $ra
.text
if_0:
	lw $t0, 0($s0)
	li $t1, 5
	beq $t0, $t1, then_0
	j else_0
.text
else_0:
	li $t0, 3
	sw $t0, 4($s0)
	lw $t0, 4($s0)
	addi $s3, $s3, -4
	sw $ra, 0($s3)
	sw $t0, 0($s2)
	jal OUT_INT
	lw $ra, 0($s3)
	addi $s3, $s3, 4
	j fi_0
.text
then_0:
	li $t0, 2
	sw $t0, 4($s0)
	lw $t0, 4($s0)
	addi $s3, $s3, -4
	sw $ra, 0($s3)
	sw $t0, 0($s2)
	jal OUT_INT
	lw $ra, 0($s3)
	addi $s3, $s3, 4
	j fi_0
.text
fi_0:
	jr $ra
.data
	object_str: .asciiz "Object"
	void_str: .asciiz "Void"
	bool_str: .asciiz "Bool"
	true_str: .asciiz "true"
	false_str: .asciiz "false"
	substring: .space 40
	text_0: .asciiz "El valor de n es: \n"
.text
main:
	la $sp, 0x7FFFFFC0
	sw $ra, 0($sp)
	move $s0, $sp
	move $s1, $sp
	move $s2, $sp
	move $s3, $sp
	move $s4, $sp
	jal Main.n
	jal Main.t
	lw $t0, 0($s0)
	sw $t0, 0($s2)
	jal OUT_INT
	jal if_0
	la $t0, text_0
	sw $t0, 0($s2)
	jal OUT_STRING
	lw $t0, 0($s0)
	sw $t0, 0($s2)
	jal OUT_INT
	lw $ra, 0($sp)
	li $v0, 10
	syscall
