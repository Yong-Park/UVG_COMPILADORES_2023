Fibonacci.fibonacci:=
	$s0 <- 0($sp)
	$s1 <- 4($sp)
	$s2 <- 8($sp)
	$s3 <- 12($sp)
if_0:=
	$t0 <- 0($s1)
	$t1 <- 1
	$t0 == $t1 GOTO then_0
else_0:=
if_1:=
	$t0 <- 0($s1)
	$t1 <- 2
	$t0 == $t1 GOTO then_1
else_1:=
	$t0 <- 0($s1)
	$t1 <- 1
	$t0 <- $t0 - $t1
	0($s1) <- $t0
	$t0 <- CALL_OWN Fibonacci.fibonacci($t0)
	$t1 <- 0($s1)
	$t2 <- 2
	$t1 <- $t1 - $t2
	0($s1) <- $t1
	$t1 <- CALL_OWN Fibonacci.fibonacci($t1)
	$t0 <- $t0 * $t1
	4($s1) <- $t0
	GOTO fi_1
then_1:=
	$t0 <- 1
	4($s1) <- $t0
fi_1:=
	GOTO fi_0
then_0:=
	$t0 <- 1
	4($s1) <- $t0
fi_0:=
Fibonacci.fibonacci_EndTask:=
Main.n:=
	$t0 <- 5
	0($s0) <- $t0
Main.n_EndTask:=
Main.s:=
Main.s_EndTask:=
Main.t:=
Main.t_EndTask:=
Main.myfibonacci:=
Main.myfibonacci_EndTask:=
main:=
	$s0 <- 0($sp)
	$s1 <- 4($sp)
	$s2 <- 8($sp)
	$s3 <- 12($sp)
	CALL Main.n
	$t0 <- 5
	$t1 <- 6
	$t0 <- $t0 + $t1
	0($s0) <- $t0
	$t0 <- true
	4($s0) <- $t0
	$t0 <- 4($s0)
	$t1 <-  NOT $t0
	6($s0) <- $t1
	8($s0) <- $t0
	$t0 <- 8($s0)
	$t1 <- 0($s0)
	0($s1) <- $t1
	$t0 <- CALL Fibonacci.fibonacci($t1)
	$t0 <- CALL OUT_INT($t0)
main_EndTask:=
