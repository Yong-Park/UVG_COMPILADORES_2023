Three Direction Code
Fibonacci:=
fibonacci:=
if:=
	LP[0] == 1 GOTO then
else:=
if:=
	LP[0] == 2 GOTO then
else:=
	t0 <- 1 + 2
	t0 <- LP[0] - t0
	t0 <- CALL fibonacci(t0)
	t1 <- 1 + 2
	t1 <- t1 + 3
	t1 <- LP[0] - t1
	t1 <- CALL fibonacci(t1)
	t0 <- t0 * t1
	t1 <- LP[0] - 1
	t1 <- CALL fibonacci(t1)
	t0 <- t0 + t1
	LP[4] <- t0
	GOTO fi
then:=
	LP[4] <- 1
fi:=
	GOTO fi
then:=
	LP[4] <- 1
fi:=
fibonacci_EndTask:=
Fibonacci_EndTask:=
Main:=
n:=
	GP[0] <- 5
n_EndTask:=
s:=
s_EndTask:=
t:=
t_EndTask:=
myfibonacci:=
myfibonacci_EndTask:=
main:=
	t0 <- 5 + 6
	GP[0] <- t0
	t0 <- 1
	GP[4] <- t0
	t0 <-  NOT GP[4]
	GP[6] <- t0
	t0 <- Fibonacci
	GP[8] <- t0
	t0 <- CALL GP[8].fibonacci(GP[0])
	t0 <- CALL OUT_INT(t0)
main_EndTask:=
Main_EndTask:=
